apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "ceph-backup.fullname" . }}
  labels:
    {{- include "ceph-backup.scheduler.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.schedule | quote }}
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 6
  successfulJobsHistoryLimit: 24
  startingDeadlineSeconds: 1800
  jobTemplate:
    metadata:
      labels:
        {{- include "ceph-backup.scheduler.labels" . | nindent 8 }}
    spec:
      backoffLimit: 1
      activeDeadlineSeconds: 1800
      template:
        metadata:
          labels:
            {{- include "ceph-backup.scheduler.labels" . | nindent 12 }}
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "ceph-backup.fullname" . }}
          restartPolicy: Never
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
            - name: {{ .Chart.Name }}
              securityContext:
                {{- toYaml .Values.securityContext | nindent 16 }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CEPH_MONITORS
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.cephSecretName | quote }}
                      key: monitors
                - name: CEPH_USER
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.cephSecretName | quote }}
                      key: user
                - name: CEPH_ARGS
                  value: "--conf /var/run/secrets/ceph/rbd.conf --keyring /var/run/secrets/ceph/rbd.conf --user $(CEPH_USER)"
                - name: CEPH_SECRET_NAME
                  value: {{ .Values.cephSecretName | quote }}
                - name: CEPH_KEY_SECRET_NAME
                  value: {{ .Values.cephKeySecretName | quote }}
                - name: RESTIC_SECRET_NAME
                  value: {{ .Values.resticSecretName | quote }}
                - name: BACKUP_IMAGE
                  value: "{{ .Values.backupImage.repository }}:{{ .Values.backupImage.tag | default .Chart.AppVersion }}"
                - name: BACKUP_IMAGE_PULL_POLICY
                  value: {{ .Values.backupImage.pullPolicy }}
                - name: BACKUP_MAX_DURATION
                  value: "{{ printf "%.0f" .Values.backupMaxDurationSeconds }}"
                {{- if .Values.jaeger.enabled }}
                - name: OTEL_TRACES_EXPORTER
                  value: "otlp_proto_grpc"
                - name: OTEL_EXPORTER_OTLP_ENDPOINT
                  value: "http://{{ include "ceph-backup.fullname" . }}-jaeger:4317"
                - name: OTEL_EXPORTER_OTLP_INSECURE
                  value: "true"
                - name: OTEL_RESOURCE_ATTRIBUTES
                  value: "service.name=ceph-backup-scheduler"
                {{- end }}
              volumeMounts:
                - name: ceph
                  mountPath: /var/run/secrets/ceph
                  readOnly: true
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
          volumes:
            - name: ceph
              secret:
                secretName: {{ .Values.cephSecretName }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
